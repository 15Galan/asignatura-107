# Datos del enunciado: tabla
poblacion <- c(9.47,9.26,8.86,8.25,7.81,8.01,7.55,7.24,7.01,6.88,7.03)
# Apartado (a) ---------------------------------------------------------------
plot(poblacion)
# Apartado (a) ---------------------------------------------------------------
ts(poblacion, start=c(1973,1))
# Apartado (a) ---------------------------------------------------------------
serie <- ts(poblacion, start=c(1973,1))
plot(serie)
# Apartado (a) ---------------------------------------------------------------
pob1 <- head(poblacion, -4)
pob2 <- tail(poblacion, -4)
# Crear un objeto de tipo serie temporal
serie4 <- ts(poblacion, start=c(1973,1), frequency=4)
serie5 <- ts(poblacion, start=c(1973,1), frequency=5)
plot(serie4)
plot(serie5)
# Datos que se usaran en estos ejemplos
ruta  <- paste(getwd(), "/Recursos/ts01.dat", sep="")  # Ruta relativa
datos <- scan(ruta)
# Convertir los datos en un objeto de serie temporal
serie <- ts(datos, start=c(1969,1), frequency=4)
# Obtener la tendencia
filtro <- c(.5,1,1,1,.5) / 4    # Filtro que aplica una media movil (orden par)
tenden <- filter(serie, filtro)
# Mostrar la serie temporal junto a la tendencia
plot(serie)
lines(tenden, col=2)  # A単ade la tendencia al grafico anterior
# Datos que se usaran en estos ejemplos
ruta  <- paste(getwd(), "/Recursos/ts01.dat", sep="")  # Ruta relativa
datos <- scan(ruta)
lines(serie4$tend, col=2)
# Datos del enunciado: tabla
poblacion <- c(9.47,9.26,8.86,8.25,7.81,8.01,7.55,7.24,7.01,6.88,7.03)
# Crear un objeto de tipo serie temporal
serie <- ts(poblacion, start=c(1973,1))
# Crear un objeto de tipo serie temporal
serie4 <- ts(poblacion, start=c(1973,1), frequency=4)
serie5 <- ts(poblacion, start=c(1973,1), frequency=5)
plot(serie5)
lines(serie4$tend, col=2)
summary(serie4)
# Crear un objeto de tipo serie temporal
serie4 <- ts(poblacion, start=c(1973,1), frequency=4)
# Obtener la tendencia
filtro4 <- c(.5,1,1,1,.5) / 4
tenden4 <- filter(serie, filtro)
tenden4 <- filter(serie4, filtro4)
# Crear un objeto de tipo serie temporal
serie4 <- ts(poblacion, start=c(1973,1), frequency=4)
# Obtener la tendencia
filtro4 <- c(.5,1,1,1,.5) / 4
tenden4 <- filter(serie4, filtro4)
# Crear un objeto de tipo serie temporal
serie5 <- ts(poblacion, start=c(1973,1), frequency=5)
# Obtener la tendencia
filtro5 <- c(.5,1,1,1,1,.5) / 5
tenden5 <- filter(serie4, filtro4)
# Representar funciones
plot(serie)
lines(tenden4, col=4)
lines(tenden5, col=5)
tenden5 <- filter(serie5, filtro5)
# Representar funciones
plot(serie)
lines(tenden4, col=4)
lines(tenden5, col=5)
serie4
serie
lines(tenden4, col=2)
lines(tenden5, col=3)
# Representar funciones
plot(serie)
lines(tenden4, col=2)
lines(tenden5, col=3)
# Crear un objeto de tipo serie temporal
serie <- ts(poblacion, start=c(1973,1), frequency=1)
# Representar funciones
plot(serie)
lines(tenden4, col=2)
lines(tenden5, col=3)
serie
# Crear un objeto de tipo serie temporal
serie <- ts(poblacion, start=c(1973,1))
# Obtener la tendencia
filtro5 <- c(1,1,1,1,1) / 5
tenden5 <- filter(serie5, filtro5)
# Representar funciones
plot(serie)
lines(tenden4, col=2)
lines(tenden5, col=3)
# Representar funciones
plot(serie4)
lines(tenden4, col=2)
lines(tenden5, col=3)
# Representar funciones
plot(serie4)
lines(tenden4, col=2)
plot(serie5)
lines(tenden5, col=3)
# Representar funciones
plot(serie4)
plot(serie5)
# Representar funciones
plot(serie4)
lines(tenden5, col=3)
plot(serie5)
lines(tenden4, col=2)
# Representar funciones
plot(serie4)
desc <- decompose(serie, type="mul")
plot(desc)
desc <- decompose(serie4, type="mul")
plot(desc)
plot(desc$trend)
lines(tenden4)
plot(desc$trend)
lines(tenden4)
lines(tenden4, col=2)
desc <- decompose(serie5, type="mul")
plot(desc$trend)
lines(tenden5, col=2)
desc <- decompose(poblacion, type="mul")
asignacion <- 1:11
t <- 1:11
# Prediccion lineal
xx     <- 1:11            # Porque la serie tiene 11 valores
# Prediccion lineal
xx     <- 1:11            # Porque la serie tiene 11 valores
modelo <- lm(serie ~ xx)
ajuste <- predict.lm(modelo)
predic <- ts(ajuste, start=c(1973,1))
plot(serie)
lines(predic, col=3)  # A単adir la prediccion al grafico anterior
modelo <- lm(serie ~ c(1:11))
# Prediccion lineal
modelo <- lm(serie ~ c(1:11)) # Porque la serie tiene 11 valores
ajuste <- predict.lm(modelo)
predic <- ts(ajuste, start=c(1973,1))
plot(serie)
lines(predic, col=2)  # A単adir la prediccion al grafico anterior
# Prediccion lineal
modelo <- lm(serie ~ c(1:11)) # Porque la serie tiene 11 valores
ajuste <- predict.lm(modelo)
predic <- ts(ajuste, start=c(1973,1))
plot(serie)
lines(predic, col=2)  # A単adir la prediccion al grafico anterior
table(tenden4, tenden5, predic)
table(c(tenden4, tenden5, predic))
table(c(tenden4, tenden5, predic))
table(c(tenden4, tenden5, predic), byrow=T)
tabla <- matrix(c(tenden4, tenden5, predic), byrow=T, nrow=3)
tabla
tabla <- table(matrix(c(tenden4, tenden5, predic), byrow=T, nrow=3))
tabla
tabla
tabla <- matrix(cbind(tenden4, tenden5, predic), byrow=T, nrow=3)
# Apartado (c) ---------------------------------------------------------------
cbind(tenden4, tenden5, predic)
# Apartado (c) ---------------------------------------------------------------
tabla <- matrix(c(tenden4, tenden5, predic), byrow=T, nrow=3)
tabla
serie4
serie4 - decompose(serie4, type="mul")$seasonal
plot(serie4 - decompose(serie4, type="mul")$seasonal)
